# PDFのビルドを行うworkflow
name: build

# masterブランチへのpush、またはvから始まるタグに対して実行
# 例えばv1.0.0など
on:
  push:
    branches:
      - master
      - main 
    tags:
      - "v*"

permissions:
  contents: write 
  pull-requests: read 

env:
  # MakefileでDockerを使う機能を無効にする
  USE_DOCKER: no
  # 生成するファイルの名前。
  ARTIFACT_NAME: main.pdf

# 実行されるジョブの定義
jobs:
  # PDFのビルドジョブ
  build:
    runs-on: ubuntu-latest
    container:
      # もし独自のDockerイメージを変更したい場合、ここを変更する
      image: ghcr.io/pddg/latex:3.1.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 実際のビルドは `bin/build.sh` を実行している
      - name: Build
        run: | 
          chmod +x ./bin/build.sh
          ./bin/build.sh

      # 生成したPDFをGitHub Actionsにアップロードする
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf
          # アップロードするファイルを変更する場合、以下を変える
          path: ./${{ env.ARTIFACT_NAME }}

  # GitHubのReleaseを作成するジョブ
  # v1.0.0のようなタグがpushされた時のみ実行
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ビルドジョブでアップロードしたPDFをここでダウンロード
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pdf

      # Releaseを作成する
      # https://github.com/YOURNAME/YOURREPO/releases に 'Release タグ名' で作成
      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e "s#refs/tags/##g")
          gh release create ${VERSION} --generate-notes ./${{ env.ARTIFACT_NAME }}
